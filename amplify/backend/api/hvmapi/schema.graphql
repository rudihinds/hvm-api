# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type CostOfLivingRanking @model {
  cityCountry: String! @primaryKey
  grossRentalYieldOutsideOfCentre: Float!
  priceToRentRatioOutsideOfCentre: Float!
  housePriceToIncomeRatio: Float!
  affordabilityIndex: Float!
  mortgageAsPercentageOfIncome: Float!
  priceToRentRatioCityCentre: Float!
  grossRentalYieldCityCentre: Float!
  cityPrice: CityPrice @hasOne(fields: ["cityCountry"])
}

input CostOfLivingRankingInput {
  cityCountry: String!
  grossRentalYieldOutsideOfCentre: Float!
  priceToRentRatioOutsideOfCentre: Float!
  housePriceToIncomeRatio: Float!
  affordabilityIndex: Float!
  mortgageAsPercentageOfIncome: Float!
  priceToRentRatioCityCentre: Float!
  grossRentalYieldCityCentre: Float!
}

type CityPrice @model {
  cityCountry: String! @primaryKey
  city: String
  country: String
  prices: [Price]
  usdPrices: [UsdPrice]
  currency: String
  contributors12Months: Int
  monthLastUpdate: Int
  contributors: Int
  yearLastUpdate: Int
  images: [ImageObject]
  numbeoCityId: Int
  costOfLivingRanking: CostOfLivingRanking @hasOne(fields: ["cityCountry"]) # one to one with costOfLivingRanking
}

input CityPriceInput {
  cityCountry: String!
  city: String
  country: String
  prices: [PriceInput]
  usdPrices: [UsdPriceInput]
  currency: String
  contributors12Months: Int
  monthLastUpdate: Int
  contributors: Int
  yearLastUpdate: Int
  images: [ImageObjectInput]
  numbeoCityId: Int
}

type Price {
  itemId: Int
  itemName: String
  lowestPrice: Float
  averagePrice: Float
  highestPrice: Float
  dataPoints: Int
}

input PriceInput {
  itemId: Int
  itemName: String
  lowestPrice: Float
  averagePrice: Float
  highestPrice: Float
  dataPoints: Int
}

type UsdPrice {
  lowestPrice: Float
  averagePrice: Float
  highestPrice: Float
  dataPoints: Int
  itemName: String
  itemId: Int
}

input UsdPriceInput {
  lowestPrice: Float
  averagePrice: Float
  highestPrice: Float
  dataPoints: Int
  itemName: String
  itemId: Int
}

type ImageObject {
  unsplashId: String
  description: String
  urls: Urls
  height: Int
  width: Int
  unsplashLikes: Int
}

input ImageObjectInput {
  unsplashId: String
  description: String
  urls: UrlsInput
  height: Int
  width: Int
  unsplashLikes: Int
}

type Urls {
  raw: String
  full: String
  regular: String
  small: String
  thumb: String
  smallS3: String
}

input UrlsInput {
  raw: String
  full: String
  regular: String
  small: String
  thumb: String
  smallS3: String
}

type CityPriceConnection {
  Items: [CityPrice]
  nextToken: String
}
